name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  CI:
     runs-on: ubuntu-latest

     steps:
      # java 버전 설정
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
    # gradle 세팅
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: ${{ runner.os }}-gradle-
    # 권한 부여 
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        # jar 파일 생성 
      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: flcat/test_docker

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

# 도커 허브 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

# 도커 허브 푸시 
      - name: Docker build & push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
  CD:
     needs: CI
     runs-on: ubuntu-latest

     steps:
      - uses: actions/checkout@v3
      
     # ec2 서버 접속 및 dir 생성
      - name: create remote directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.KEY_DEV }}
          script: mkdir -p ~/srv/ubuntu

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: ~/srv/ubuntu
          remote_host: ${{ secrets.HOST_DEV }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY_DEV }}

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DEV }}
          username: ubuntu
          key: ${{ secrets.KEY_DEV }}
          script: |
            sudo systemctl stop docker.socket $(sudo docker ps -aq)
            sudo systemctl rm docker $(sudo docker ps -aq)
            sudo systemctl rmi docker $(sudo docker images -q)
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml pull
            sudo docker-compose -f ~/srv/ubuntu/docker-compose.yml up --build -d
